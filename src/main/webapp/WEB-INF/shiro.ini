# =======================
# Shiro INI configuration
# =======================

[main]
# Objects and their properties are defined here,
# Such as the securityManager, Realms and anything
# else needed to build the SecurityManager
authc.loginUrl = /faces/login.xhtml
user.loginUrl = /faces/login.xhtml



ds = com.mysql.jdbc.jdbc2.optional.MysqlDataSource
ds.URL = jdbc:mysql://localhost:3306/newsletterapp
ds.user = root
ds.password = ralink12

jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.dataSource = $ds
jdbcRealm.permissionsLookupEnabled = true
jdbcRealm.authenticationQuery = SELECT password FROM user WHERE username = ?
jdbcRealm.userRolesQuery = SELECT role FROM userroles WHERE iduser = (SELECT iduser FROM user WHERE username = ?)


# Configure JDBC realm password hashing.
credentialsMatcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
credentialsMatcher.hashAlgorithmName = SHA-256
jdbcRealm.credentialsMatcher = $credentialsMatcher

[users]
# The 'users' section is for simple deployments
# when you only need a small number of statically-defined
# set of User accounts.
admin = pass

[roles]
# The 'roles' section is for simple deployments
# when you only need a small number of statically-defined
# roles.


[urls]
# The 'urls' section is used for url-based security
# in web applications.  We'll discuss this section in the
# Web documentation
/faces/index.xhtml = authc
/faces/subscription.xhtml = authc
/faces/unsubscription.xhtml = authc
/faces/register.xhtml = anon
/ = authc
/faces/javax.faces.resource/** = anon
